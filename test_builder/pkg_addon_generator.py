# Copyright (C) 2022 Stryzhniou Fiodar

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


from __future__ import with_statement
import os
from common_names import *

# Template args = (Package Name, UID).
__install_header = """
;
;   Warning: autogenerated file.
;

; Language - standard language definitions.
&EN

; List of localised vendor names - one per language. At least one must be provided (English [EN]).
; List must correspond to list of languages specified elsewhere in the .pkg
%%{"test_name"}
; The non-localised, globally unique vendor name (mandatory)
:"test_name"

; UID is the app's UID.
#{"%s"},(%s),1,0,0

; Supports Series 60 v 3.0.
[0x101F7961], 0, 0, 0, {"Series60ProductID"}
; Supports Series 60 v 5.0.
[0x1028315F], 0, 0, 0, {"Series60ProductID"}
"""

installer = """
; Launcher, Application, AIF & Resource file.
"$(EPOCROOT)epoc32\\release\\gcce\\urel\\test_name.exe" -		"!:\\sys\\bin\\test_name.exe"
"$(EPOCROOT)epoc32\\data\\z\\private\\10003a3f\\apps\\test_name_reg.rsc" -
							"!:\\private\\10003a3f\\import\\apps\\test_name_reg.rsc"
"""

eclipse_installer = """
; Launcher, Application, AIF & Resource file.
"$(EPOCROOT)epoc32\\release\\$(PLATFORM)\\$(TARGET)\\test_name.exe" -		"!:\\sys\\bin\\test_name.exe"
"$(EPOCROOT)epoc32\\data\\z\\private\\10003a3f\\apps\\test_name_reg.rsc" -
							"!:\\private\\10003a3f\\import\\apps\\test_name_reg.rsc"
"""

mif_install = """
;    \"$(EPOCROOT)epoc32\\data\\z\\resource\\apps\\GOLD.mif\" -	\"!:\\resource\\apps\\GOLD.mif\"
"""


def EPOCROOT_to_path():
   return os.path.join( os.path.splitdrive(os.getcwd())[0], os.environ['EPOCROOT'])

def replace_EPOCROOT(test_name, buf = installer):
   buf = buf.replace("test_name", test_name)
   return buf.replace("$(EPOCROOT)", EPOCROOT_to_path())

def save_installer_data(path, uid, file, index, append = ""):
   # print "i: %s" % index
   append2file(file, append %(index, index, index, index, index, index, index, index))

def install_header(uid, installer_name):
   tmp = __install_header %(installer_name, uid)
   return tmp.replace("test_name", installer_name)

def package_name(name, isCmdline = False):
   name = "%s" %name
   if isCmdline:
      name += "-cmdline"
   return name + ".pkg"

def create_addon_pkg(project_path, tests, UID3, test_installer_name):
   uid = hex(UID3).rstrip("Ll")
   file     = os.path.join(project_path, package_name(test_installer_name))
   file_cmd = os.path.join(project_path, package_name(test_installer_name, True))
   save2file(file,     install_header(uid, test_installer_name))
   save2file(file_cmd, install_header(uid, test_installer_name))
   for test in tests:
      append2file(file_cmd,  replace_EPOCROOT(test[0]))
      append2file(file,      eclipse_installer.replace("test_name", test[0]))

if __name__ == "__main__":
   create_addon_pkg("", "", "", "")
