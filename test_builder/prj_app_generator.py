# Copyright (C) 2022 Stryzhniou Fiodar

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


from __future__ import with_statement
import os, stat
from common_names import *


# ---------------------------
# Expect: reg_rss_template %(UID3, appname, application group name)
reg_rss_template = """
/*
 * Warning: autogenerated file
 */
// All registration files need to #include appinfo.rh.
#include <AppInfo.rh>

// All registration files must define UID2, which is always
// KUidAppRegistrationResourceFile, and UID3, which is the application's UID.
UID2 KUidAppRegistrationResourceFile
UID3 %s // application UID

// Registration file need to containo an APP_REGISTRATION_INFO resource that
// minimally needs to provide the name of the application binary (using the
// app_file statement).
RESOURCE APP_REGISTRATION_INFO
    {
    app_file = "%s"; // filename of application binary (minus extension)
    // Specify the location of the localisable icon/caption definition file
%s
    }
"""


# ---------------------------
# Expect: mmp_template %UID3
mmp_template = """
/*
 * Warning: autogenerated file
 */

//
// EPOC S60 MMP makefile project
//

// *** Definitions


TARGET          test_name.exe

OPTION          GCCE -Wno-multichar -Wno-reorder -Wno-unused -Wno-format -fsigned-char \
 -fno-asynchronous-unwind-tables -std=c++11 // -ffreestanding -fno-sized-deallocation //--verbose //-flto -fuse-linker-plugin //-Wl, -v  -fbuiltin
// fixes error "section .data loaded at [...] overlaps section .text loaded at [...]"
LINKEROPTION    GCCE -Tdata 0xAA00000 // -v -flto -fuse-linker-plugin
//--print-gc-sections --stats --gc-sections --strip-all// removes unused code

UID             0x100039ce %s


START RESOURCE  test_name_reg.rss
TARGETPATH              \private\\10003a3f\\apps
END

EPOCSTACKSIZE   80000
EPOCHEAPSIZE    5000000 64000000

#include "../tests_config.mmh"
"""

bld_inf = """
PRJ_PLATFORMS
GCCE WINSCW

PRJ_MMPFILES
%s.mmp
"""

def group_name(folder):
   if folder is None:
      return ""
   return 'group_name = "%s";' %folder

def create_app_mmps(project_path, tests, UID3, phone_menu_folder, src_path):
   for test in tests:
      test_name = test[0]
      path = os.path.join(project_path, test_name)
      print "path:%s" %path
      if not os.path.exists(path):
         os.mkdir(path)

      data = reg_rss_template %(hex(UID3).rstrip("Ll"), test_name, group_name(phone_menu_folder))
      rss_reg_name = "%s_reg.rss" %test_name
      save2file(os.path.join(path, rss_reg_name), data)

      data = mmp_template %hex(UID3).rstrip("Ll")
      data = data.replace("test_name", test_name)
      mmp_name = "%s.mmp" %test_name
      mmp = os.path.join(path, mmp_name)
      save2file(mmp, data)
      
      append2file(mmp, "SOURCEPATH  %s\n" %src_path)
      srcs = test[1]
      for x in srcs:
         append2file(mmp, "SOURCE %s\n" %x)

      data = bld_inf %test_name
      save2file(os.path.join(path, "bld.inf"), data)

      UID3 = UID3 + 1

if __name__ == "__main__":
   "Not allowed to run"
